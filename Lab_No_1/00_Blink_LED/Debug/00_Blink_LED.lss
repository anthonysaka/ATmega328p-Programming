
00_Blink_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000118  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000c4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000118  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000148  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000188  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000069c  00000000  00000000  000001b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061b  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000214  00000000  00000000  00000e67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000107c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000378  00000000  00000000  000010b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  00001428  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 47 00 	call	0x8e	; 0x8e <main>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <system_setup>:


void system_setup(void)
{
	// Set PC.5 as output
	DDRC = (1<<DDC5); // 0010 0000 (1<<5)
  80:	80 e2       	ldi	r24, 0x20	; 32
  82:	87 b9       	out	0x07, r24	; 7
	
	//Set PC.5 init Low (un cero)
	PORTC =  BIT_OFF(PORTC,5); // 0000 0000
  84:	88 b1       	in	r24, 0x08	; 8
  86:	8f 7d       	andi	r24, 0xDF	; 223
  88:	88 b9       	out	0x08, r24	; 8
  8a:	88 b9       	out	0x08, r24	; 8
  8c:	08 95       	ret

0000008e <main>:
}

int main(void)
{
	// Init system
	system_setup();
  8e:	0e 94 40 00 	call	0x80	; 0x80 <system_setup>
	while (1)
	{
		// Wait 1 second
		__builtin_avr_delay_cycles(DELAY_025_SEC);
		//Toggle LED
		BIT_TOGGLE (PORTC,5);
  92:	90 e2       	ldi	r25, 0x20	; 32
	system_setup();
	
	while (1)
	{
		// Wait 1 second
		__builtin_avr_delay_cycles(DELAY_025_SEC);
  94:	2f ef       	ldi	r18, 0xFF	; 255
  96:	34 e3       	ldi	r19, 0x34	; 52
  98:	8c e0       	ldi	r24, 0x0C	; 12
  9a:	21 50       	subi	r18, 0x01	; 1
  9c:	30 40       	sbci	r19, 0x00	; 0
  9e:	80 40       	sbci	r24, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0xc>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x16>
  a4:	00 00       	nop
		//Toggle LED
		BIT_TOGGLE (PORTC,5);
  a6:	88 b1       	in	r24, 0x08	; 8
  a8:	89 27       	eor	r24, r25
  aa:	88 b9       	out	0x08, r24	; 8
		__builtin_avr_delay_cycles(DELAY_075_SEC);
  ac:	2f ef       	ldi	r18, 0xFF	; 255
  ae:	3e e9       	ldi	r19, 0x9E	; 158
  b0:	84 e2       	ldi	r24, 0x24	; 36
  b2:	21 50       	subi	r18, 0x01	; 1
  b4:	30 40       	sbci	r19, 0x00	; 0
  b6:	80 40       	sbci	r24, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x24>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x2e>
  bc:	00 00       	nop
  be:	ea cf       	rjmp	.-44     	; 0x94 <main+0x6>

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>
